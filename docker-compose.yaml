version: '3'

services:
    app:
        build: .
        container_name: app
        entrypoint: dockerize -wait tcp://db:5432 -timeout 40s ./.docker/entrypoint.sh
        command: /usr/local/startup.sh && crond -f -l 8
        volumes:
            - .:/var/www
            - ./data/cron/startup.sh:/usr/local/startup.sh:ro
        networks:
            - app-network
        depends_on:
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: nginx
        restart: always
        tty: true
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
        depends_on:
            - app
        networks:
            - app-network

    db:
        image: postgres:9.6
        container_name: "postgres"
        restart: always
        environment:
            - POSTGRES_DB=data_service
            - POSTGRES_USER=postgres
            - TZ=GMT
            - POSTGRES_PASSWORD=root
        volumes:
            - ./.docker/mysql:/docker-entrypoint-initdb.d
        ports:
            - 5432:5432
        networks:
            - app-network

    redis:
        image: redis:alpine
        expose:
            - 6379
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
